{"ast":null,"code":"// import toast from 'react-hot-toast'\n// import { authenticate } from './helper'\n\n// /** validate login page username */\n// export async function usernameValidate(values){\n//     const errors = usernameVerify({}, values);\n\n//     if(values.username){\n//         // check user exist or not\n//         const { status } = await authenticate(values.username);\n\n//         if(status !== 200){\n//             errors.exist = toast.error('User does not exist...!')\n//         }\n//     }\n\n//     return errors;\n// }\n\n// /** validate password */\n// export async function passwordValidate(values){\n//     const errors = passwordVerify({}, values);\n\n//     return errors;\n// }\n\n// /** validate reset password */\n// export async function resetPasswordValidation(values){\n//     const errors = passwordVerify({}, values);\n\n//     if(values.password !== values.confirm_pwd){\n//         errors.exist = toast.error(\"Password not match...!\");\n//     }\n\n//     return errors;\n// }\n\n// /** validate register form */\n// export async function registerValidation(values){\n//     const errors = usernameVerify({}, values);\n//     passwordVerify(errors, values);\n//     emailVerify(errors, values);\n\n//     return errors;\n// }\n\n// /** validate profile page */\n// export async function profileValidation(values){\n//     const errors = emailVerify({}, values);\n//     return errors;\n// }\n\n// /** ************************************************* */\n\n// /** validate password */\n// function passwordVerify(errors = {}, values){\n//     /* eslint-disable no-useless-escape */\n//     const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n//     if(!values.password){\n//         errors.password = toast.error(\"Password Required...!\");\n//     } else if(values.password.includes(\" \")){\n//         errors.password = toast.error(\"Wrong Password...!\");\n//     }else if(values.password.length < 4){\n//         errors.password = toast.error(\"Password must be more than 4 characters long\");\n//     }else if(!specialChars.test(values.password)){\n//         errors.password = toast.error(\"Password must have special character\");\n//     }\n\n//     return errors;\n// }\n\n// /** validate username */\n// function usernameVerify(error = {}, values){\n//     if(!values.username){\n//         error.username = toast.error('Username Required...!');\n//     }else if(values.username.includes(\" \")){\n//         error.username = toast.error('Invalid Username...!')\n//     }\n\n//     return error;\n// }\n\n// /** validate email */\n// function emailVerify(error ={}, values){\n//     if(!values.email){\n//         error.email = toast.error(\"Email Required...!\");\n//     }else if(values.email.includes(\" \")){\n//         error.email = toast.error(\"Wrong Email...!\")\n//     }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\n//         error.email = toast.error(\"Invalid email address...!\")\n//     }\n\n//     return error;\n// }","map":{"version":3,"names":[],"sources":["/Users/kirtan/Desktop/IMG-API/Client/src/helper/validate.js"],"sourcesContent":["// import toast from 'react-hot-toast'\n// import { authenticate } from './helper'\n\n// /** validate login page username */\n// export async function usernameValidate(values){\n//     const errors = usernameVerify({}, values);\n\n//     if(values.username){\n//         // check user exist or not\n//         const { status } = await authenticate(values.username);\n        \n//         if(status !== 200){\n//             errors.exist = toast.error('User does not exist...!')\n//         }\n//     }\n\n//     return errors;\n// }\n\n// /** validate password */\n// export async function passwordValidate(values){\n//     const errors = passwordVerify({}, values);\n\n//     return errors;\n// }\n\n// /** validate reset password */\n// export async function resetPasswordValidation(values){\n//     const errors = passwordVerify({}, values);\n\n//     if(values.password !== values.confirm_pwd){\n//         errors.exist = toast.error(\"Password not match...!\");\n//     }\n\n//     return errors;\n// }\n\n// /** validate register form */\n// export async function registerValidation(values){\n//     const errors = usernameVerify({}, values);\n//     passwordVerify(errors, values);\n//     emailVerify(errors, values);\n\n//     return errors;\n// }\n\n// /** validate profile page */\n// export async function profileValidation(values){\n//     const errors = emailVerify({}, values);\n//     return errors;\n// }\n\n\n// /** ************************************************* */\n\n// /** validate password */\n// function passwordVerify(errors = {}, values){\n//     /* eslint-disable no-useless-escape */\n//     const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n//     if(!values.password){\n//         errors.password = toast.error(\"Password Required...!\");\n//     } else if(values.password.includes(\" \")){\n//         errors.password = toast.error(\"Wrong Password...!\");\n//     }else if(values.password.length < 4){\n//         errors.password = toast.error(\"Password must be more than 4 characters long\");\n//     }else if(!specialChars.test(values.password)){\n//         errors.password = toast.error(\"Password must have special character\");\n//     }\n\n//     return errors;\n// }\n\n\n// /** validate username */\n// function usernameVerify(error = {}, values){\n//     if(!values.username){\n//         error.username = toast.error('Username Required...!');\n//     }else if(values.username.includes(\" \")){\n//         error.username = toast.error('Invalid Username...!')\n//     }\n\n//     return error;\n// }\n\n// /** validate email */\n// function emailVerify(error ={}, values){\n//     if(!values.email){\n//         error.email = toast.error(\"Email Required...!\");\n//     }else if(values.email.includes(\" \")){\n//         error.email = toast.error(\"Wrong Email...!\")\n//     }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\n//         error.email = toast.error(\"Invalid email address...!\")\n//     }\n\n//     return error;\n// }"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}