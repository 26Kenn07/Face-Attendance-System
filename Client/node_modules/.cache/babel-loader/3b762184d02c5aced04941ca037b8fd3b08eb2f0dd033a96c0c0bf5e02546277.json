{"ast":null,"code":"var _jsxFileName = \"/Users/kirtan/Desktop/IMG-API/Client/src/components/Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useFormik } from 'formik';\nimport { resetPasswordValidation } from '../helper/validate';\nimport { resetPassword } from '../helper/helper';\nimport { useAuthStore } from '../store/store';\nimport { useNavigate, Navigate } from 'react-router-dom';\nimport useFetch from '../hooks/fetch.hook';\nimport styles from '../styles/Username.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reset() {\n  _s();\n  const {\n    username\n  } = useAuthStore(state => state.auth);\n  const navigate = useNavigate();\n  const [{\n    isLoading,\n    apiData,\n    status,\n    serverError\n  }] = useFetch('createResetSession');\n  const formik = useFormik({\n    initialValues: {\n      password: 'admin@123',\n      confirm_pwd: 'admin@123'\n    },\n    validate: resetPasswordValidation,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit: async values => {\n      let resetPromise = resetPassword({\n        username,\n        password: values.password\n      });\n      toast.promise(resetPromise, {\n        loading: 'Updating...',\n        success: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Reset Successfully...!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }, this),\n        error: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Could not Reset!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      });\n      resetPromise.then(function () {\n        navigate('/password');\n      });\n    }\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-2xl font-bold\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 24\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-xl text-red-500\",\n    children: serverError.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 26\n  }, this);\n  if (status && status !== 201) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: '/password',\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 39\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.glass,\n        style: {\n          width: \"50%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-5xl font-bold\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"py-4 text-xl w-2/3 text-center text-gray-500\",\n            children: \"Enter new password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"py-20\",\n          onSubmit: formik.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox flex flex-col items-center gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('password'),\n              className: styles.textbox,\n              type: \"text\",\n              placeholder: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...formik.getFieldProps('confirm_pwd'),\n              className: styles.textbox,\n              type: \"text\",\n              placeholder: \"Repeat Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btn,\n              type: \"submit\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Reset, \"NUFCqYJmdDVRhmUcsNYNlIG+8fo=\", false, function () {\n  return [useAuthStore, useNavigate, useFetch, useFormik];\n});\n_c = Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useEffect","toast","Toaster","useFormik","resetPasswordValidation","resetPassword","useAuthStore","useNavigate","Navigate","useFetch","styles","Reset","username","state","auth","navigate","isLoading","apiData","status","serverError","formik","initialValues","password","confirm_pwd","validate","validateOnBlur","validateOnChange","onSubmit","values","resetPromise","promise","loading","success","error","then","message","glass","width","handleSubmit","getFieldProps","textbox","btn"],"sources":["/Users/kirtan/Desktop/IMG-API/Client/src/components/Reset.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useFormik } from 'formik';\nimport { resetPasswordValidation } from '../helper/validate'\nimport { resetPassword } from '../helper/helper'\nimport { useAuthStore } from '../store/store';\nimport { useNavigate, Navigate } from 'react-router-dom';\nimport useFetch from '../hooks/fetch.hook'\n\nimport styles from '../styles/Username.module.css';\n\nexport default function Reset() {\n\n  const { username } = useAuthStore(state => state.auth);\n  const navigate = useNavigate();\n  const [{ isLoading, apiData, status, serverError }] = useFetch('createResetSession')\n\n  const formik = useFormik({\n    initialValues : {\n      password : 'admin@123',\n      confirm_pwd: 'admin@123'\n    },\n    validate : resetPasswordValidation,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit : async values => {\n      \n      let resetPromise = resetPassword({ username, password: values.password })\n\n      toast.promise(resetPromise, {\n        loading: 'Updating...',\n        success: <b>Reset Successfully...!</b>,\n        error : <b>Could not Reset!</b>\n      });\n\n      resetPromise.then(function(){ navigate('/password') })\n\n    }\n  })\n\n\n  if(isLoading) return <h1 className='text-2xl font-bold'>isLoading</h1>;\n  if(serverError) return <h1 className='text-xl text-red-500'>{serverError.message}</h1>\n  if(status && status !== 201) return <Navigate to={'/password'} replace={true}></Navigate>\n\n  return (\n    <div className=\"container mx-auto\">\n\n      <Toaster position='top-center' reverseOrder={false}></Toaster>\n\n      <div className='flex justify-center items-center h-screen'>\n        <div className={styles.glass} style={{ width : \"50%\"}}>\n\n          <div className=\"title flex flex-col items-center\">\n            <h4 className='text-5xl font-bold'>Reset</h4>\n            <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\n              Enter new password.\n            </span>\n          </div>\n\n          <form className='py-20' onSubmit={formik.handleSubmit}>\n              <div className=\"textbox flex flex-col items-center gap-6\">\n                  <input {...formik.getFieldProps('password')} className={styles.textbox} type=\"text\" placeholder='New Password' />\n                  <input {...formik.getFieldProps('confirm_pwd')} className={styles.textbox} type=\"text\" placeholder='Repeat Password' />\n                  <button className={styles.btn} type='submit'>Reset</button>\n              </div>\n\n          </form>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}